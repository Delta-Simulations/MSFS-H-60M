<?xml version="1.0" encoding="utf-8" ?>
<!-- BY DESTROYER121-NO UNAUTHORISED REDISTRIBUTION -->
<ModelInfo>
	<LODS>
		<LOD minSize="0" 	ModelFile="UH60Mint_LOD00.gltf"/>

	</LODS>
	<Behaviors>
		<Include ModelBehaviorFile="Asobo\Exterior.xml"/>
    <Include ModelBehaviorFile="Asobo\Common.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\AirlinerCommon.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\FMC.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\GlassCockpit.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\Boeing.xml"/>
    <Include ModelBehaviorFile="Asobo\Generic\FX.xml"/>
    <Include ModelBehaviorFile="Asobo\AircraftTypes\Rotorcrafts.xml"/>
    <Include Path="DeltaSim-UH60\DeltaSim_Switch_Template.xml"/>
    <Include Path="DeltaSim-UH60\DeltaSim_Lighting_Template.xml"/>
    <Include Path="DeltaSim-UH60\DeltaSim_Anim_Template.xml"/>
    <Include Path="DeltaSim-UH60\DeltaSim_MFD_Template.xml"/>
    

<Component ID="MFD">
      <UseTemplate Name="DELTASIM_MFD_Template">
        <ID>1</ID>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_MFD_Template">
        <ID>2</ID>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_MFD_Template">
        <ID>3</ID>
      </UseTemplate>

</Component>


    <Component ID="EFBBRT" Node="TABLET.002">
      <UseTemplate Name="ASOBO_GT_Material_Emissive_Code">
        <EMISSIVE_CODE>
          (L:Uh60_EFB_BRT, enum) 0.1 *
          (A:GLASSCOCKPIT AUTOMATIC BRIGHTNESS, number) * 0.05 +
        </EMISSIVE_CODE>
      </UseTemplate>
      </Component>

          <!-- GUN FX======================================================-->
    <Component ID="GUNFX1" Node="FX_GUN_1">
      <UseTemplate Name="ASOBO_GT_FX"> 
      <FX_CODE>(L:EFFECT_GUN,bool) 0 &gt; </FX_CODE>
      <FX_OFFSET_X>0</FX_OFFSET_X>
      <FX_OFFSET_Y>0</FX_OFFSET_Y>
      <FX_OFFSET_Z>0</FX_OFFSET_Z>
      <FX_GUID>{C1DCC871-3672-4DB4-8498-6BB651BC926D}</FX_GUID>
      </UseTemplate>
    </Component>

    <Component ID="GUNFX2" Node="FX_GUN_2">
      <UseTemplate Name="ASOBO_GT_FX"> 
      <FX_CODE>(L:EFFECT_GUN,bool) 0 &gt; </FX_CODE>
      <FX_OFFSET_X>0</FX_OFFSET_X>
      <FX_OFFSET_Y>0</FX_OFFSET_Y>
      <FX_OFFSET_Z>0</FX_OFFSET_Z>
      <FX_GUID>{C1DCC871-3672-4DB4-8498-6BB651BC926D}</FX_GUID>
      </UseTemplate>
    </Component>

<Component ID="OH_PCLS">
  <Component ID="Lever_PCL2" Node="Lever_PCL2">
    <UseTemplate Name="ASOBO_GT_Interaction_DraggingAxis_Code">
        <UP_CODE>
          (L:H60_PCL2, percent) ++ 100 min (>L:H60_PCL2, percent)
        </UP_CODE>
        <DOWN_CODE>
            (L:H60_PCL2, percent) -- 0 max (>L:H60_PCL2, percent)
        </DOWN_CODE>
        <AXIS>X</AXIS>
        <DRAG_AXIS_SCALE>100</DRAG_AXIS_SCALE>
    </UseTemplate>
    <UseTemplate Name="ASOBO_GT_Anim_Code">
      <PART_ID>Lever_PCL2</PART_ID>
      <ANIM_NAME>Lever_PCL2</ANIM_NAME>
      <NODE_ID>Lever_PCL2</NODE_ID>
      <ANIM_CODE>
        (L:H60_PCL2, percent)
      </ANIM_CODE>
      <ANIM_LAG>300</ANIM_LAG>
    </UseTemplate>
  </Component>
  <Component ID="Lever_PCL1" Node="Lever_PCL1">
    <UseTemplate Name="ASOBO_GT_Interaction_DraggingAxis_Code">
        <UP_CODE>
          (L:H60_PCL1, percent) ++ 100 min (>L:H60_PCL1, percent)
        </UP_CODE>
        <DOWN_CODE>
          (L:H60_PCL1, percent) -- 0 max (>L:H60_PCL1, percent)
        </DOWN_CODE>
        <AXIS>X</AXIS>
        <DRAG_AXIS_SCALE>100</DRAG_AXIS_SCALE>
    </UseTemplate>
    <UseTemplate Name="ASOBO_GT_Anim_Code">
      <PART_ID>Lever_PCL1</PART_ID>
      <ANIM_NAME>Lever_PCL1</ANIM_NAME>
      <NODE_ID>Lever_PCL1</NODE_ID>
      <ANIM_CODE>
        (L:H60_PCL1, percent)
      </ANIM_CODE>
      <ANIM_LAG>300</ANIM_LAG>
    </UseTemplate>
  </Component>


  <Component ID="Lever_Eng2_Fuel" Node="Lever_Eng2_Fuel">
    <UseTemplate Name = "ASOBO_GT_Switch_3States">
      <ANIM_NAME>Lever_Eng2_Fuel</ANIM_NAME>
      <NODE_ID>Lever_Eng2_Fuel</NODE_ID>
      <DEFAULT_POS>0</DEFAULT_POS>
      <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
      <SWITCH_POSITION_VAR>H60_Fuel2</SWITCH_POSITION_VAR>
      <SWITCH_DIRECTION>Horizontal</SWITCH_DIRECTION>
      <INVERT_ANIM>False</INVERT_ANIM>
      <ANIMTIP_0>ENG2 FUEL OFF</ANIMTIP_0>
      <ANIMTIP_1>ENG2 FUEL DIR</ANIMTIP_1>
      <ANIMTIP_2>ENG2 FUEL XFD</ANIMTIP_2>
    </UseTemplate>
  </Component>
  <Component ID="Lever_Eng1_Fuel" Node="Lever_Eng1_Fuel">
    <UseTemplate Name = "ASOBO_GT_Switch_3States">
      <ANIM_NAME>Lever_Eng1_Fuel</ANIM_NAME>
      <NODE_ID>Lever_Eng1_Fuel</NODE_ID>
      <DEFAULT_POS>0</DEFAULT_POS>
      <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
      <SWITCH_POSITION_VAR>H60_Fuel1</SWITCH_POSITION_VAR>
      <SWITCH_DIRECTION>Horizontal</SWITCH_DIRECTION>
      <INVERT_ANIM>False</INVERT_ANIM>
      <ANIMTIP_0>ENG1 FUEL OFF</ANIMTIP_0>
      <ANIMTIP_1>ENG1 FUEL DIR</ANIMTIP_1>
      <ANIMTIP_2>ENG1 FUEL XFD</ANIMTIP_2>
    </UseTemplate>
  </Component>

  <!-- <UseTemplate Name="ASOBO_ROTORCRAFT_Lever_Rotor_Brake_Template">
    <ANIM_NAME>Lever_Rotor_Brake</ANIM_NAME>
    <NODE_ID>Lever_Rotor_Brake</NODE_ID>
    <PART_ID>Lever_Rotor_Brake</PART_ID>
</UseTemplate> -->

<Component ID="ROTOR_BRAKE" Node="Lever_Rotor_Brake">
  <UseTemplate Name="ASOBO_GT_Switch_Code">
    <PART_ID>Lever_Rotor_Brake</PART_ID>
    <ANIM_LENGTH>100</ANIM_LENGTH>
    <ANIM_NAME>Lever_Rotor_Brake</ANIM_NAME>
    <ANIM_LAG>300</ANIM_LAG>
    <ANIM_CODE>(A:ROTOR BRAKE ACTIVE, Bool) 100 *</ANIM_CODE>
    <LEFT_SINGLE_CODE>
      (L:RotorBrakeActive) ! (&gt;L:RotorBrakeActive)
      (L:RotorBrakeActive)
      if{
        (&gt;K:ROTOR_BRAKE_ON)
      } els{
        (&gt;K:ROTOR_BRAKE_OFF)
      }
    </LEFT_SINGLE_CODE>
    <ANIMTIP_0>ROTOR BRAKE (UNLOCKED)</ANIMTIP_0>
    <ANIMTIP_1>ROTOR BRAKE (ENGAGED)</ANIMTIP_1>
  </UseTemplate>
  <UseTemplate Name="ASOBO_GT_Update">
    <FREQUENCY>1</FREQUENCY>
    <UPDATE_CODE>
      (L:RotorBrakeActive) if{ (&gt;K:ROTOR_BRAKE_ON) }
    </UPDATE_CODE>
  </UseTemplate>
</Component>

</Component>

<Component ID="OH_ELEC">
<!-- EXTERNAL LIGHTING -->
<!-- BEACON -->
<Component ID="Joystick_SL_POS" Node="Joystick_SL_POS">
  <UseTemplate Name="ASOBO_GT_Joystick">
      <TOOLTIPID>SEARCH LIGHT POSITION</TOOLTIPID>
      <ANIM_NAME_L_R>Joystick_SL_POS_LeftRight</ANIM_NAME_L_R>
      <ANIM_NAME_DN_UP>Joystick_SL_POS_UpDn</ANIM_NAME_DN_UP>
      <JOYSTICK_X_CODE_LEFT>(L:H60_SL_RightLeft, enum) 1 (A:CIRCUIT ON:54, Bool) * - 0 max (>L:H60_SL_RightLeft, enum)</JOYSTICK_X_CODE_LEFT>
      <JOYSTICK_X_CODE_RIGHT>(L:H60_SL_RightLeft, enum) 1 (A:CIRCUIT ON:54, Bool) * + 100 min (>L:H60_SL_RightLeft, enum)</JOYSTICK_X_CODE_RIGHT>
      <JOYSTICK_Y_CODE_DOWN>(L:H60_SL_DownUp, enum) 1 (A:CIRCUIT ON:54, Bool) * + 100 min (>L:H60_SL_DownUp, enum)</JOYSTICK_Y_CODE_DOWN>
      <JOYSTICK_Y_CODE_UP>(L:H60_SL_DownUp, enum) 1 (A:CIRCUIT ON:54, Bool) * - 0 max (>L:H60_SL_DownUp, enum)</JOYSTICK_Y_CODE_UP>
  </UseTemplate>
</Component>
<Component ID="Switch_AntiColl_Mode" Node="Switch_AntiColl_Mode"> <UseTemplate Name = "ASOBO_GT_Switch_3States">
    <ANIM_NAME>Switch_AntiColl_Mode</ANIM_NAME>
    <NODE_ID>Switch_AntiColl_Mode</NODE_ID>
    <DEFAULT_POS>1</DEFAULT_POS>
    <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
    <SWITCH_POSITION_VAR>H60_AntiColl_Mode</SWITCH_POSITION_VAR>
    <SWITCH_DIRECTION>Vertical</SWITCH_DIRECTION>
    <INVERT_ANIM>False</INVERT_ANIM>
    <ANIMTIP_0>BEACON UPPER</ANIMTIP_0>
    <ANIMTIP_1>BEACON BOTH</ANIMTIP_1>
    <ANIMTIP_2>BEACON LOWER</ANIMTIP_2>
  </UseTemplate> </Component>
  <Component ID="Switch_AntiColl_PWR" Node="Switch_AntiColl_PWR"> <UseTemplate Name = "ASOBO_GT_Switch_3States">
    <ANIM_NAME>Switch_AntiColl_PWR</ANIM_NAME>
    <NODE_ID>Switch_AntiColl_PWR</NODE_ID>
    <DEFAULT_POS>0</DEFAULT_POS>
    <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
    <SWITCH_POSITION_VAR>H60_AntiColl_PWR</SWITCH_POSITION_VAR>
    <SWITCH_DIRECTION>Vertical</SWITCH_DIRECTION>
    <INVERT_ANIM>True</INVERT_ANIM>
    <ANIMTIP_0>BEACON DAY</ANIMTIP_0>
    <ANIMTIP_1>BEACON OFF</ANIMTIP_1>
    <ANIMTIP_2>BEACON NIGHT</ANIMTIP_2>
  </UseTemplate> </Component>
  <!-- NAV LIGHTS -->

  <Component ID="Switch_Nav_Pwr" Node="Switch_Nav_Pwr"> <UseTemplate Name = "ASOBO_GT_Switch_3States">
    <ANIM_NAME>Switch_Nav_Pwr</ANIM_NAME>
    <NODE_ID>Switch_Nav_Pwr</NODE_ID>
    <DEFAULT_POS>0</DEFAULT_POS>
    <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
    <SWITCH_POSITION_VAR>H60_Nav_PWR</SWITCH_POSITION_VAR>
    <SWITCH_DIRECTION>Vertical</SWITCH_DIRECTION>
    <INVERT_ANIM>False</INVERT_ANIM>
    <ANIMTIP_0>NAV DIM</ANIMTIP_0>
    <ANIMTIP_1>NAV OFF</ANIMTIP_1>
    <ANIMTIP_2>NAV BRT</ANIMTIP_2>
  </UseTemplate> </Component>



  <UseTemplate Name="AircraftVar_Switch_DELTASIM">
    <SIMVAR>MASTER IGNITION SWITCH</SIMVAR>
    <NODE_ID>Key_Master_Ignition</NODE_ID>
    <TOOLTIPID>MASTER INGITION</TOOLTIPID>
    <EVENT_SIMVAR>TOGGLE_MASTER_IGNITION_SWITCH</EVENT_SIMVAR>
    <INDEX>1</INDEX>
  </UseTemplate>



  <UseTemplate Name="DELTASIM_Finite_Knob_Template">
    <NODE_ID>KNOB_OH_PNL_BACKLIGHT</NODE_ID>
    <ANIM_CODE>(L:H60_OH_PNL_BACKLIGHT, percent)</ANIM_CODE>
    <CLOCKWISE_CODE>
      (L:H60_OH_PNL_BACKLIGHT, percent) 10 + 100 min (&gt;L:H60_OH_PNL_BACKLIGHT, percent)
    </CLOCKWISE_CODE>
    <ANTICLOCKWISE_CODE>
      (L:H60_OH_PNL_BACKLIGHT, percent) 10 - 0 max (&gt;L:H60_OH_PNL_BACKLIGHT, percent)
    </ANTICLOCKWISE_CODE>
    <CW_ANIMTIP>OH PNL BACKLIGHT</CW_ANIMTIP>
    <CCW_ANIMTIP>OH PNL BACKLIGHT</CCW_ANIMTIP>
  </UseTemplate>
  <UseTemplate Name="DELTASIM_Finite_Knob_Template">
    <NODE_ID>KNOB_INST_PNL_BACKLIGHT</NODE_ID>
    <ANIM_CODE>(L:H60_INST_PNL_BACKLIGHT, percent)</ANIM_CODE>
    <CLOCKWISE_CODE>
      (L:H60_INST_PNL_BACKLIGHT, percent) 10 + 100 min (&gt;L:H60_INST_PNL_BACKLIGHT, percent)
    </CLOCKWISE_CODE>
    <ANTICLOCKWISE_CODE>
      (L:H60_INST_PNL_BACKLIGHT, percent) 10 - 0 max (&gt;L:H60_INST_PNL_BACKLIGHT, percent)
    </ANTICLOCKWISE_CODE>
    <CW_ANIMTIP>INST PNL BACKLIGHT</CW_ANIMTIP>
    <CCW_ANIMTIP>INST PNL BACKLIGHT</CCW_ANIMTIP>
  </UseTemplate>


  <UseTemplate Name="DELTASIM_Finite_Knob_Template">
    <NODE_ID>Knob_Formation_Lights</NODE_ID>
    <ANIM_CODE>(A:LIGHT POTENTIOMETER:10, percent)</ANIM_CODE>
    <CLOCKWISE_CODE>
      (A:LIGHT POTENTIOMETER:10, percent) 20 + 100 min (&gt;K:LIGHT_POTENTIOMETER_10_SET)
    </CLOCKWISE_CODE>
    <ANTICLOCKWISE_CODE>
      (A:LIGHT POTENTIOMETER:10, percent) 20 - 0 max (&gt;K:LIGHT_POTENTIOMETER_10_SET)
    </ANTICLOCKWISE_CODE>
    <CW_ANIMTIP>FORMATION LGT</CW_ANIMTIP>
    <CCW_ANIMTIP>FORMATION LGT</CCW_ANIMTIP>
  </UseTemplate>

  <UseTemplate Name="DELTASIM_PushButton_Template">
    <NODE_ID>Switch_Pitot_L</NODE_ID>
    <TOOLTIPID>CP PITOT</TOOLTIPID>
    <LEFT_SINGLE_CODE>
      (L:H60_cP_PITOT, bool) ! (&gt;L:H60_cP_PITOT, bool)
    </LEFT_SINGLE_CODE>
</UseTemplate>
<Component ID="KNOB_AFCS_HDG_SEL" Node="KNOB_AFCS_HDG_SEL">
  <UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
    <NODE_ID>KNOB_AFCS_HDG_SEL</NODE_ID>
    <PART_ID>KNOB_AFCS_HDG_SEL</PART_ID>
    <ANIM_NAME_KNOB>KNOB_AFCS_HDG_SEL</ANIM_NAME_KNOB>
<CLOCKWISE_CODE_DEFAULT_IM>
  (&gt;K:HEADING_BUG_INC)
</CLOCKWISE_CODE_DEFAULT_IM>
<ANTICLOCKWISE_CODE_DEFAULT_IM>
  (&gt;K:HEADING_BUG_DEC)
</ANTICLOCKWISE_CODE_DEFAULT_IM>
<CLOCKWISE_CODE_DRAG_IM>
  (A:AUTOPILOT HEADING LOCK DIR, degrees) 1 + dnor (&gt;K:HEADING_BUG_SET)
</CLOCKWISE_CODE_DRAG_IM>
<ANTICLOCKWISE_CODE_DRAG_IM>
  (A:AUTOPILOT HEADING LOCK DIR, degrees) 1 - dnor (&gt;K:HEADING_BUG_SET)
</ANTICLOCKWISE_CODE_DRAG_IM>
<LEFT_SINGLE_CODE>(A:HEADING INDICATOR, degrees) (&gt;K:HEADING_BUG_SET)</LEFT_SINGLE_CODE>
<ANIMTIP_0>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_HDG_TUNING_LEFT</ANIMTIP_0>
<ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
<ANIMTIP_1>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_HDG_TUNING_RIGHT</ANIMTIP_1>
<ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
<ANIMTIP_3>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_HDG_PUSH</ANIMTIP_3>
<ANIMTIP_3_ON_CURSOR>Hand</ANIMTIP_3_ON_CURSOR>
<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
    <THRESHOLD_X_MOUSE>0.015</THRESHOLD_X_MOUSE>
  </UseTemplate>
</Component>
<Component ID="KNOB_AFCS_ALT_SEL" Node="KNOB_AFCS_ALT_SEL">
  <UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
    <NODE_ID>KNOB_AFCS_ALT_SEL</NODE_ID>
    <PART_ID>KNOB_AFCS_ALT_SEL</PART_ID>
    <ANIM_NAME_KNOB>KNOB_AFCS_ALT_SEL</ANIM_NAME_KNOB>
<CLOCKWISE_CODE_DEFAULT_IM>
  (&gt;K:AP_ALT_VAR_INC)
</CLOCKWISE_CODE_DEFAULT_IM>
<ANTICLOCKWISE_CODE_DEFAULT_IM>
  (&gt;K:AP_ALT_VAR_DEC)
</ANTICLOCKWISE_CODE_DEFAULT_IM>
<CLOCKWISE_CODE_DRAG_IM>
  (&gt;K:AP_ALT_VAR_INC)
</CLOCKWISE_CODE_DRAG_IM>
<ANTICLOCKWISE_CODE_DRAG_IM>
  (&gt;K:AP_ALT_VAR_DEC)
</ANTICLOCKWISE_CODE_DRAG_IM>
<LEFT_SINGLE_CODE>(A:INDICATED ALTITUDE, feet) (&gt;K:AP_ALT_VAR_SET_ENGLISH)</LEFT_SINGLE_CODE>
<ANIMTIP_0>DEC ALTITUDE</ANIMTIP_0>
<ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
<ANIMTIP_1>INC ALTITUDE</ANIMTIP_1>
<ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
<ANIMTIP_3>SET CURRENT</ANIMTIP_3>
<ANIMTIP_3_ON_CURSOR>Hand</ANIMTIP_3_ON_CURSOR>
<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
    <THRESHOLD_X_MOUSE>0.015</THRESHOLD_X_MOUSE>
  </UseTemplate>
</Component>



<Component ID="KNOB_AFCS_IAS_SEL" Node="KNOB_AFCS_IAS_SEL">
  <UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
    <NODE_ID>KNOB_AFCS_IAS_SEL</NODE_ID>
    <PART_ID>KNOB_AFCS_IAS_SEL</PART_ID>
    <ANIM_NAME_KNOB>KNOB_AFCS_IAS_SEL</ANIM_NAME_KNOB>
<CLOCKWISE_CODE_DEFAULT_IM>
(&gt;K:AP_SPD_VAR_INC)
</CLOCKWISE_CODE_DEFAULT_IM>
<ANTICLOCKWISE_CODE_DEFAULT_IM>
(&gt;K:AP_SPD_VAR_DEC)
</ANTICLOCKWISE_CODE_DEFAULT_IM>
<CLOCKWISE_CODE_DRAG_IM>
(A:AUTOPILOT AIRSPEED HOLD VAR, knots) 1 + dnor (&gt;K:AP_SPD_VAR_SET)
</CLOCKWISE_CODE_DRAG_IM>
<ANTICLOCKWISE_CODE_DRAG_IM>
(A:AUTOPILOT AIRSPEED HOLD VAR, knots) 1 - dnor (&gt;K:AP_SPD_VAR_SET)
</ANTICLOCKWISE_CODE_DRAG_IM>
<LEFT_SINGLE_CODE>
(A:AIRSPEED INDICATED, knots) (&gt;K:AP_SPD_VAR_SET)
</LEFT_SINGLE_CODE>
<ANIMTIP_0>DEC SPD</ANIMTIP_0>
<ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
<ANIMTIP_1>INC SPD</ANIMTIP_1>
<ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
<ANIMTIP_3>SET CURRENT</ANIMTIP_3>
<ANIMTIP_3_ON_CURSOR>Hand</ANIMTIP_3_ON_CURSOR>
<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
    <THRESHOLD_X_MOUSE>0.015</THRESHOLD_X_MOUSE>
  </UseTemplate>
</Component>

<UseTemplate Name="DELTASIM_PushButton_Template">
  <NODE_ID>Button_HDG</NODE_ID>
  <TOOLTIPID>HDG MODE</TOOLTIPID>
  <LEFT_SINGLE_CODE>
    (L:H60_AFCS_HDG_HOLD, bool) ! (&gt;L:H60_AFCS_HDG_HOLD, bool)
  </LEFT_SINGLE_CODE>
</UseTemplate>
<UseTemplate Name="DELTASIM_PushButton_Template">
  <NODE_ID>Button_HVR</NODE_ID>
  <TOOLTIPID>HVR</TOOLTIPID>
  <LEFT_SINGLE_CODE>
    (L:H60_AFCS_HVR_HOLD, bool) ! (&gt;L:H60_AFCS_HVR_HOLD, bool)
    (A:PLANE ALT ABOVE GROUND,feet) (&gt;L:H60_AFCS_HVR_ALT, feet)
    (A:PLANE LATITUDE,feet) (&gt;L:H60_AFCS_HVR_LAT, feet)
    (A:PLANE LONGITUDE,feet) (&gt;L:H60_AFCS_HVR_LONG, feet)
    <!-- (&gt;K:FREEZE_LATITUDE_LONGITUDE_TOGGLE)
    (&gt;K:FREEZE_ALTITUDE_TOGGLE) -->
  </LEFT_SINGLE_CODE>
</UseTemplate>
<UseTemplate Name="DELTASIM_PushButton_Template">
  <NODE_ID>Button_IAS</NODE_ID>
  <TOOLTIPID>SPD HOLD</TOOLTIPID>
  <LEFT_SINGLE_CODE>
    (K:AP_PANEL_SPEED_HOLD) ! (&gt;K:AP_PANEL_SPEED_HOLD)          
  </LEFT_SINGLE_CODE>
</UseTemplate>
<UseTemplate Name="DELTASIM_PushButton_Template">
  <NODE_ID>Button_ALT</NODE_ID>
  <TOOLTIPID>ALT HOLD</TOOLTIPID>
  <LEFT_SINGLE_CODE>
    (L:H60_AFCS_ALT_HOLD, bool) ! (&gt;L:H60_AFCS_ALT_HOLD, bool)
  </LEFT_SINGLE_CODE>
</UseTemplate>
<UseTemplate Name="DELTASIM_PushButton_Template">
  <NODE_ID>BUTTON_FD</NODE_ID>
  <TOOLTIPID>FLIGHT DIRECTOR</TOOLTIPID>
  <LEFT_SINGLE_CODE>
    (K:TOGGLE_FLIGHT_DIRECTOR) ! (&gt;K:TOGGLE_FLIGHT_DIRECTOR)
  </LEFT_SINGLE_CODE>
</UseTemplate>
<UseTemplate Name="DELTASIM_PushButton_Template">
  <NODE_ID>Button_AP</NODE_ID>
  <TOOLTIPID>AP MASTER</TOOLTIPID>
  <LEFT_SINGLE_CODE>
    (K:AP_MASTER) ! (&gt;K:AP_MASTER)
  </LEFT_SINGLE_CODE>
</UseTemplate>
<UseTemplate Name="DELTASIM_PushButton_Template">
  <NODE_ID>Button_AT</NODE_ID>
  <TOOLTIPID>AT MASTER</TOOLTIPID>
  <INTERACT_CODE>
    (K:AUTO_THROTTLE_ARM) ! (&gt;K:AUTO_THROTTLE_ARM)
  </INTERACT_CODE>
</UseTemplate>




  <UseTemplate Name="Switch_3PosMomentary_DELTASIM">
    <NODE_ID>Switch_EXT_PWR</NODE_ID>
    <TEST_NODE>Click_EXTPWR_TST</TEST_NODE>
    <NORM_NODE>Click_EXTPWR</NORM_NODE>
    <TOOLTIPID_NORM>EXT PWR</TOOLTIPID_NORM>
  </UseTemplate>
  <UseTemplate Name="Switch_3PosMomentary_DELTASIM">
    <NODE_ID>Switch_BATT_STBY</NODE_ID>
    <TEST_NODE>Click_STBYINST_TST</TEST_NODE>
    <NORM_NODE>Click_STBYINST</NORM_NODE>
    <TOOLTIPID_NORM>BATT STBY INST</TOOLTIPID_NORM>
  </UseTemplate>
  <UseTemplate Name="Switch_3PosMomentary_DELTASIM">
    <NODE_ID>Switch_BATT1</NODE_ID>
    <TEST_NODE>Click_BATT1_TST</TEST_NODE>
    <NORM_NODE>Click_BATT1</NORM_NODE>
    <TOOLTIPID_NORM>BATT1</TOOLTIPID_NORM>
  </UseTemplate>
  <UseTemplate Name="Switch_3PosMomentary_DELTASIM">
    <NODE_ID>Switch_BATT2</NODE_ID>
    <TEST_NODE>Click_BATT2_TST</TEST_NODE>
    <NORM_NODE>Click_BATT2</NORM_NODE>
    <TOOLTIPID_NORM>BATT2</TOOLTIPID_NORM>
  </UseTemplate>
  <UseTemplate Name="Switch_3PosMomentary_DELTASIM">
    <NODE_ID>Switch_GEN_APU</NODE_ID>
    <TEST_NODE>Click_APUGEN_TST</TEST_NODE>
    <NORM_NODE>Click_APUGEN</NORM_NODE>
    <TOOLTIPID_NORM>APU GEN</TOOLTIPID_NORM>
  </UseTemplate>
  <UseTemplate Name="Switch_3PosMomentary_DELTASIM">
    <NODE_ID>Switch_GEN_ENG1</NODE_ID>
    <TEST_NODE>Click_ENG1GEN_TST</TEST_NODE>
    <NORM_NODE>Click_ENG1GEN</NORM_NODE>
    <TOOLTIPID_NORM>ENG1 GEN</TOOLTIPID_NORM>
  </UseTemplate>
  <UseTemplate Name="Switch_3PosMomentary_DELTASIM">
    <NODE_ID>Switch_GEN_ENG2</NODE_ID>
    <TEST_NODE>Click_ENG2GEN_TST</TEST_NODE>
    <NORM_NODE>Click_ENG2GEN</NORM_NODE>
    <TOOLTIPID_NORM>ENG2 GEN</TOOLTIPID_NORM>
  </UseTemplate>

  <UseTemplate Name="DELTASIM_PushButton_Template">
    <NODE_ID>Switch_Pitot_L</NODE_ID>
    <TOOLTIPID>CP PITOT</TOOLTIPID>
    <LEFT_SINGLE_CODE>
      (L:H60_cP_PITOT, bool) ! (&gt;L:H60_cP_PITOT, bool)
    </LEFT_SINGLE_CODE>
</UseTemplate>
  <UseTemplate Name="DELTASIM_PushButton_Template">
    <NODE_ID>Switch_Pitot_R</NODE_ID>
    <TOOLTIPID>P PITOT</TOOLTIPID>
    <LEFT_SINGLE_CODE>
      (L:H60_P_PITOT, bool) ! (&gt;L:H60_P_PITOT, bool)
    </LEFT_SINGLE_CODE>
</UseTemplate>

  <UseTemplate Name="DELTASIM_PushButton_Template">
    <NODE_ID>Switch_ENG1_AntiIce</NODE_ID>
    <TOOLTIPID>ENG ANTI ICE</TOOLTIPID>
    <LEFT_SINGLE_CODE>
      (K:ANTI_ICE_TOGGLE_ENG1) ! (&gt;K:ANTI_ICE_TOGGLE_ENG1)
    </LEFT_SINGLE_CODE>
</UseTemplate>
<UseTemplate Name="DELTASIM_PushButton_Template">
  <NODE_ID>Switch_ENG2_AntiIce</NODE_ID>
  <TOOLTIPID>ENG ANTI ICE</TOOLTIPID>
  <LEFT_SINGLE_CODE>
    (K:ANTI_ICE_TOGGLE_ENG2) ! (&gt;K:ANTI_ICE_TOGGLE_ENG2)
  </LEFT_SINGLE_CODE>
</UseTemplate>
  <UseTemplate Name="AircraftVar_Switch_DELTASIM">
    <SIMVAR>FUELSYSTEM PUMP SWITCH</SIMVAR>
    <NODE_ID>Switch_ENG1_Boost</NODE_ID>
    <TOOLTIPID>ENG1 BOOST PUMP</TOOLTIPID>
    <EVENT_SIMVAR>FUELSYSTEM_PUMP_TOGGLE</EVENT_SIMVAR>
    <INDEX>1</INDEX>
  </UseTemplate>
  <UseTemplate Name="AircraftVar_Switch_DELTASIM">
    <SIMVAR>FUELSYSTEM PUMP SWITCH</SIMVAR>
    <NODE_ID>Switch_ENG2_Boost</NODE_ID>
    <TOOLTIPID>ENG2 BOOST PUMP</TOOLTIPID>
    <EVENT_SIMVAR>FUELSYSTEM_PUMP_TOGGLE</EVENT_SIMVAR>
    <INDEX>2</INDEX>
  </UseTemplate>
  <Component ID="Switch_Pump_Prime" Node="Switch_Pump_Prime">
    <UseTemplate Name="ASOBO_GT_Switch_3States">
      <ANIM_NAME>Switch_Pump_Prime</ANIM_NAME>
      <DEFAULT_POS>0</DEFAULT_POS>
      <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
      <SWITCH_POSITION_VAR>H60_Fuel_Prime</SWITCH_POSITION_VAR>
      <SWITCH_DIRECTION>Vertical</SWITCH_DIRECTION>
      <INVERT_ANIM>False</INVERT_ANIM>
      <ANIMTIP_0>PRIME GEN</ANIMTIP_0>
      <ANIMTIP_1>OFF</ANIMTIP_1>
      <ANIMTIP_2>PRIME APU</ANIMTIP_2>
    </UseTemplate>
  </Component>
  <Component ID="Switch_AIR_SCRCE" Node="Switch_AIR_SCRCE">
    <UseTemplate Name="ASOBO_GT_Switch_3States">
      <ANIM_NAME>Switch_AIR_SCRCE</ANIM_NAME>
      <DEFAULT_POS>0</DEFAULT_POS>
      <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
      <SWITCH_POSITION_VAR>H60_AIR_SOURCE</SWITCH_POSITION_VAR>
      <SWITCH_DIRECTION>Vertical</SWITCH_DIRECTION>
      <INVERT_ANIM>False</INVERT_ANIM>
      <ANIMTIP_0>ENGINE</ANIMTIP_0>
      <ANIMTIP_1>OFF</ANIMTIP_1>
      <ANIMTIP_2>APU</ANIMTIP_2>
    </UseTemplate>
  </Component>
  <UseTemplate Name="GENERIC_Toggle_Switch_Template">
    <ANIM>(L:H60_EFB_MOVE, bool) 100 *</ANIM>
    <NODE_ID>EFB_MOVE</NODE_ID>
    <TOOLTIPID>EFB HIDE/SHOW</TOOLTIPID>
    <INTERACT_CODE>
      (L:H60_EFB_MOVE, bool) ! (&gt;L:H60_EFB_MOVE, bool)
    </INTERACT_CODE>
  </UseTemplate>

  <UseTemplate Name="GENERIC_Toggle_Switch_Template">
    <ANIM>(L:H60_SL_TOGGLE, bool) 100 *</ANIM>
    <NODE_ID>Push_SL_Control</NODE_ID>
    <TOOLTIPID>Search Light CNTRL</TOOLTIPID>
    <INTERACT_CODE>
      (L:H60_SL_TOGGLE, bool) ! (&gt;L:H60_SL_TOGGLE, bool)
    </INTERACT_CODE>
  </UseTemplate>

  <Component ID="Armor_side_move" Node="Armor_side_move">
    <UseTemplate Name="ASOBO_GT_Interaction_DraggingAxis_Code">
        <UP_CODE>
            (L:H60_ARMOR_P, number) ++ 100 min (>L:H60_ARMOR_P, number)
        </UP_CODE>
        <DOWN_CODE>
            (L:H60_ARMOR_P, number) -- 0 max (>L:H60_ARMOR_P, number)
        </DOWN_CODE>
        <AXIS>X</AXIS>
        <DRAG_AXIS_SCALE>300</DRAG_AXIS_SCALE>
    </UseTemplate>
    <UseTemplate Name="ASOBO_GT_Anim_Code">
      <PART_ID>Armor_side_move</PART_ID>
      <ANIM_NAME>Armor_side_move</ANIM_NAME>
      <NODE_ID>Armor_side_move</NODE_ID>
      <ANIM_CODE>
        (L:H60_ARMOR_P, number)
      </ANIM_CODE>
      <ANIM_LAG>10</ANIM_LAG>
    </UseTemplate>
</Component>

  <UseTemplate Name="GENERIC_Toggle_Switch_Template">
    <ANIM>(L:H60_APU_START, bool) 100 *</ANIM>
    <NODE_ID>Switch_APU_CNTRL</NODE_ID>
    <TOOLTIPID>APU CNTRL</TOOLTIPID>
    <INTERACT_CODE>
      (L:H60_APU_START, bool) ! (&gt;L:H60_APU_START, bool)
    </INTERACT_CODE>
  </UseTemplate>

  <UseTemplate Name="GENERIC_Toggle_Switch_Template">
    <ANIM>(O:Door, bool) 100 *</ANIM>
    <NODE_ID>Door_Cargo_Hook</NODE_ID>
    <TOOLTIPID>CARGO HOOK ACCESS</TOOLTIPID>
    <INTERACT_CODE>
      (O:Door, bool) ! (&gt;O:Door, bool)
    </INTERACT_CODE>
  </UseTemplate>

<Component ID="Button_ENG1_Starter" Node="Button_ENG1_Starter">
  <UseTemplate Name="ASOBO_GT_Push_Button">
    <PART_ID>Button_ENG1_Starter</PART_ID>
    <ANIM_NAME>Button_ENG1_Starter</ANIM_NAME>
    <OVERRIDE_ANIM_CODE>(A:GENERAL ENG STARTER:1, Bool) 100 *</OVERRIDE_ANIM_CODE>
    <LEFT_SINGLE_CODE>
      1 (&gt;K:SET_STARTER1_HELD)
    </LEFT_SINGLE_CODE>
    <LEFT_LEAVE_CODE>
      0 (&gt;K:SET_STARTER1_HELD)
    </LEFT_LEAVE_CODE>
    <TOOLTIPID>START ENGINE</TOOLTIPID>
    <ANIM_LAG>600</ANIM_LAG>
  </UseTemplate>
</Component>
<Component ID="Button_ENG2_Starter" Node="Button_ENG2_Starter">
  <UseTemplate Name="ASOBO_GT_Push_Button">
    <PART_ID>Button_ENG2_Starter</PART_ID>
    <ANIM_NAME>Button_ENG2_Starter</ANIM_NAME>
    <OVERRIDE_ANIM_CODE>(A:GENERAL ENG STARTER:2, Bool) 100 *</OVERRIDE_ANIM_CODE>
    <LEFT_SINGLE_CODE>
      1 (&gt;K:SET_STARTER2_HELD)
    </LEFT_SINGLE_CODE>
    <LEFT_LEAVE_CODE>
      0 (&gt;K:SET_STARTER2_HELD)
    </LEFT_LEAVE_CODE>
    <TOOLTIPID>START ENGINE</TOOLTIPID>
    <ANIM_LAG>600</ANIM_LAG>
  </UseTemplate>
</Component>
<UseTemplate Name="GENERIC_Toggle_Switch_Template">
  <ANIM>(A:BRAKE PARKING POSITION, bool) 100 *</ANIM>
  <NODE_ID>PARKING_BRAKE_HANDLE</NODE_ID>
  <TOOLTIPID>SET/STOW PARKING BRAKE</TOOLTIPID>
  <INTERACT_CODE>
    1 (&gt;K:PARKING_BRAKES)
  </INTERACT_CODE>
</UseTemplate>


<UseTemplate Name="GENERIC_Toggle_Switch_Template">
  <ANIM>(L:Button_Lamps_Test, bool) 100 *</ANIM>
  <NODE_ID>Button_Lamps_Test</NODE_ID>
  <TOOLTIPID>TEST ANNUN</TOOLTIPID>
  <INTERACT_CODE>
    (L:H60_Lamp_Test, bool) ! (&gt;L:H60_Lamp_Test, bool)
  </INTERACT_CODE>
</UseTemplate>
<UseTemplate Name="Korry_Emmis_DELTASIM">
  <NODE_ID>Korry_MWC</NODE_ID>
  <TRUECODE>0</TRUECODE>
</UseTemplate>

<UseTemplate Name="Korry_Emmis_DELTASIM">
  <NODE_ID>Korry_Acc_Low</NODE_ID>
  <TRUECODE>0</TRUECODE>
</UseTemplate>
<UseTemplate Name="Korry_Emmis_DELTASIM">
  <NODE_ID>Korry_Oil_Hot</NODE_ID>
  <TRUECODE>0</TRUECODE>
</UseTemplate>
<UseTemplate Name="Korry_Emmis_DELTASIM">
  <NODE_ID>Korry_APU_Fail</NODE_ID>
  <TRUECODE>0</TRUECODE>
</UseTemplate>
<UseTemplate Name="Korry_Emmis_DELTASIM">
  <NODE_ID>Korry_EmerALSS_Test</NODE_ID>
  <TRUECODE>0</TRUECODE>
</UseTemplate>
<UseTemplate Name="Korry_Emmis_DELTASIM">
  <NODE_ID>Korry_APU_On</NODE_ID>
  <TRUECODE>(A:APU PCT RPM, percent) 95 &gt;</TRUECODE>
</UseTemplate>
<UseTemplate Name="Korry_Emmis_DELTASIM">
  <NODE_ID>Korry_Batt_Good</NODE_ID>
  <ELEC_PWR>1</ELEC_PWR>
  <TRUECODE>

    (L:H60_Switch_BATT1) -1 ==
    (A:ELECTRICAL BATTERY VOLTAGE:1, volts) 20.5 &gt; and

    (L:H60_Switch_BATT2) -1 ==
    (A:ELECTRICAL BATTERY VOLTAGE:2, volts) 20.5 &gt; and

    (L:H60_Switch_BATT_STBY) -1 ==
    (A:ELECTRICAL BATTERY VOLTAGE:3, volts) 20.5 &gt; and
    or or
  </TRUECODE>
</UseTemplate>
<UseTemplate Name="Korry_Emmis_DELTASIM">
  <NODE_ID>Korry_Batt_Low</NODE_ID>
  <ELEC_PWR>1</ELEC_PWR>
  <TRUECODE>
      (L:H60_Switch_BATT1) -1 ==
      (A:ELECTRICAL BATTERY VOLTAGE:1, volts) 20.5 &lt; and
      (L:H60_Switch_BATT2) -1 ==
      (A:ELECTRICAL BATTERY VOLTAGE:2, volts) 20.5 &lt; and
      (L:H60_Switch_BATT_STBY) -1 ==
      (A:ELECTRICAL BATTERY VOLTAGE:3, volts) 20.5 &lt; and or or
  </TRUECODE>
</UseTemplate>


</Component>

<Component ID="Collective">
  <UseTemplate Name="ASOBO_ROTORCRAFT_Collective_Template">
    <NODE_ID>stick</NODE_ID>
    <ANIM_NAME>collective</ANIM_NAME>
  </UseTemplate>
  <UseTemplate Name="ASOBO_ROTORCRAFT_Collective_Template">
    <NODE_ID>stick.002</NODE_ID>
    <ANIM_NAME>collective</ANIM_NAME>
  </UseTemplate>

  <!--
      Wrong animation is tied to anti-torque pedals (currently it's animating brakes) 
      Default pedal animations should be left and right pedals sliding forward and back
  -->
	<Component ID="Anti_Torque_Pedals">
			<UseTemplate Name="ASOBO_ROTORCRAFT_Tail_Rotor_Pedal_Template">
				<PART_ID>PEDALS</PART_ID>
        <ANIM_NAME>PEDALS</ANIM_NAME>
				<USE_BRAKE>True</USE_BRAKE>
				<NO_BRAKES_HIGHLIGHT>False</NO_BRAKES_HIGHLIGHT>
				<DIFFERENTIATE_BRAKE_ANIM_L_R>True</DIFFERENTIATE_BRAKE_ANIM_L_R>
				<INVERT_ANIM>False</INVERT_ANIM>
        <ANIM_LENGTH>200</ANIM_LENGTH>
			</UseTemplate>
			<CameraTitle></CameraTitle>
	</Component>

  <UseTemplate name="Generic_Anim_DELTASIM">
    <ANIM_NAME>DoorP</ANIM_NAME>
    <ANIM_CODE>
      (L:H60_DoorP, bool) 100 * 
    </ANIM_CODE>
    <ANIM_LAG>20</ANIM_LAG>
    <ANIM_LENGTH>100</ANIM_LENGTH>
  </UseTemplate>
  <UseTemplate name="Generic_Anim_DELTASIM">
    <ANIM_NAME>DoorCP</ANIM_NAME>
    <ANIM_CODE>
      (L:H60_DoorCP, bool) 100 * 
    </ANIM_CODE>
    <ANIM_LAG>20</ANIM_LAG>
    <ANIM_LENGTH>100</ANIM_LENGTH>
  </UseTemplate>

  <Component ID="DoorPilot" Node="DoorPilot">
    <UseTemplate Name="ASOBO_GT_Visibility">
      <VISIBILITY_CODE>(L:H60_FrontDoorVis) ! </VISIBILITY_CODE>
    </UseTemplate>
  </Component>
  <Component ID="DoorL" Node="L Pilot Door">
    <UseTemplate Name="ASOBO_GT_Visibility">
      <VISIBILITY_CODE>(L:H60_FrontDoorVis) ! </VISIBILITY_CODE>
    </UseTemplate>
  </Component>
  <UseTemplate name="Generic_Anim_DELTASIM">
    <ANIM_NAME>reardoorR</ANIM_NAME>
    <ANIM_CODE>
      (L:H60_TroopDoor_R, bool) 50 *
    </ANIM_CODE>
    <ANIM_LAG>20</ANIM_LAG>
    <ANIM_LENGTH>50</ANIM_LENGTH>
  </UseTemplate>
  <UseTemplate name="Generic_Anim_DELTASIM">
    <ANIM_NAME>reardoorL</ANIM_NAME>
    <ANIM_CODE>
      (L:H60_TroopDoor_L, bool) 50 *
    </ANIM_CODE>
    <ANIM_LAG>20</ANIM_LAG>
    <ANIM_LENGTH>50</ANIM_LENGTH>
  </UseTemplate>
  <UseTemplate name="Generic_Anim_DELTASIM">
    <ANIM_NAME>MGDOOR</ANIM_NAME>
    <ANIM_CODE>
      (L:PART2, bool) 100 *
    </ANIM_CODE>
    <ANIM_LENGTH>100</ANIM_LENGTH>
    <ANIM_LAG>20</ANIM_LAG>
  </UseTemplate>
		<Component ID="PILOT_VISIBILITY1" Node="Pilot_Head.004">
			<UseTemplate Name="ASOBO_GT_Visibility">
				<VISIBILITY_CODE>
					(A:CAMERA STATE, Enum) 2 != (L:H60_Pilot_Vis) 1 == and
				</VISIBILITY_CODE>
			</UseTemplate>
		</Component>
  <Component ID="PILOT_VISIBILITY2" Node="Pilot_Legs.004">
    <UseTemplate Name="ASOBO_GT_Visibility">
      <VISIBILITY_CODE>
        (A:CAMERA STATE, Enum) 2 != (L:H60_Pilot_Vis) 1 == and (L:UH60_Pilot_VRMODE) 1 == or
      </VISIBILITY_CODE>
    </UseTemplate>
  </Component>
  <Component ID="PILOT_VISIBILITY3" Node="Pilot_torso.004">
    <UseTemplate Name="ASOBO_GT_Visibility">
      <VISIBILITY_CODE>
        (A:CAMERA STATE, Enum) 2 != (L:H60_Pilot_Vis) 1 == and (L:UH60_Pilot_VRMODE) 1 == or
      </VISIBILITY_CODE>
    </UseTemplate>
  </Component>
  <Component ID="PILOT_VISIBILITY4" Node="Pilot_Head.003">
    <UseTemplate Name="ASOBO_GT_Visibility">
      <VISIBILITY_CODE>
        (L:H60_CoPilot_Vis) 1 ==
      </VISIBILITY_CODE>
    </UseTemplate>
  </Component>
<Component ID="PILOT_VISIBILITY5" Node="Pilot_Legs.003">
  <UseTemplate Name="ASOBO_GT_Visibility">
    <VISIBILITY_CODE>
      (L:H60_CoPilot_Vis) 1 ==
    </VISIBILITY_CODE>
  </UseTemplate>
</Component>
<Component ID="PILOT_VISIBILITY6" Node="Pilot_torso.003">
  <UseTemplate Name="ASOBO_GT_Visibility">
    <VISIBILITY_CODE>
      (L:H60_CoPilot_Vis) 1 ==
    </VISIBILITY_CODE>
  </UseTemplate>
</Component>

</Component>

</Behaviors>

	<!-- CUSTOM ANIMATIONS GO BELOW -->
  <Animation name="OH_PNL_BACKLIGHT" guid="d2f92e7d-3fb1-4d7e-8ee3-25baa60154d5" length="1" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
  <Name>OH_PNL_BACKLIGHT</Name>
  <Materials> <Emissive> <Parameter>
  <Code>(L:H60_OH_PNL_BACKLIGHT, percent) 200 / (A:ELECTRICAL MASTER BATTERY, bool) *</Code> 
  </Parameter> </Emissive> </Materials>
  </PartInfo>
  <Animation name="INST_PNL_BACKLIGHT" guid="58e5a062-bced-476b-9c2c-2623b2cc18d9" length="1" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
  <Name>INST_PNL_BACKLIGHT</Name>
  <Materials> <Emissive> <Parameter>
  <Code>(L:H60_INST_PNL_BACKLIGHT, percent) 200 / (A:ELECTRICAL MASTER BATTERY, bool) *</Code> 
  </Parameter> </Emissive> </Materials>
  </PartInfo>

  <Animation name="LWR_PNL_BACKLIGHT" guid="3f22c831-195c-48de-bcd7-07a8e9fecf6d" length="1" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
  <Name>LWR_PNL_BACKLIGHT</Name>
  <Materials> <Emissive> <Parameter>
  <Code>(L:H60_LWR_PNL_BACKLIGHT, percent) 200 / (A:ELECTRICAL MASTER BATTERY, bool) *</Code> 
  </Parameter> </Emissive> </Materials>
  </PartInfo>

  <Animation name="AmbientSoldierL" guid="48f5fa6d-7e1c-494b-9b28-8b8f641035fc" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>AmbientSoldierL</Name>
    <AnimLength>100</AnimLength>
    <Visibility>
      <Parameter>
       <Code>
        (L:DOORS_OPEN_REAR_L, bool) if{ 1 } els{ 0 }
       </Code>
         </Parameter>
        </Visibility>
  </PartInfo>
  
  <Animation name="AmbientSoldierR" guid="52b277b3-1d2f-4e61-a202-fa01acc0a887" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>AmbientSoldierR</Name>
    <AnimLength>100</AnimLength>

    <Visibility>
      <Parameter>
       <Code>
        (L:DOORS_OPEN_REAR_R, bool) if{ 1 } els{ 0 }
       </Code>
         </Parameter>
         </Visibility>
  </PartInfo>


<Animation name="HH-60W" guid="ceb0c4db-ca4a-4075-b406-a1dd795ada5e" length="100" type="Sim" typeparam="AutoPlay" />
<PartInfo>
  <Name>HH-60W</Name>
  <AnimLength>100</AnimLength>
  <Visibility>
  <Parameter>
    <Code>
      (L:MODEL_TYPE, enum) 0 == if{ 0 }
      (L:MODEL_TYPE, enum) 1 == if{ 1 }
      (L:MODEL_TYPE, enum) 2 == if{ 0 }
    </Code>
    <Lag>10</Lag>
  </Parameter>
</Visibility>
</PartInfo>




<Animation name="Panel_EMS" guid="c81d560e-cd12-4c98-af43-771a54fbef07" length="1" type="Sim" typeParam="AutoPlay" />
<PartInfo>
  <Name>Panel_EMS</Name>
  <Materials> <Emissive> <Parameter>
  <Code>
    (A:CIRCUIT ON:1,bool) 1 == if{ 
      (L:PNL_LGT, percent) 100 /
   } els{ 0 }
  </Code> 
  </Parameter> </Emissive> </Materials>
  </PartInfo>

  <Animation name="PNL_GLARESHEILD_EMMS" guid="a7dd4f9f-7067-4c89-a827-94bc1c0f63df" length="1" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
  <Name>PNL_GLARESHEILD_EMMS</Name>
  <Materials> <Emissive> <Parameter>
  <Code>(A:LIGHT POTENTIOMETER:2, percent) 100 /</Code> 
  </Parameter> </Emissive> </Materials>
  </PartInfo>

<!-- MG GUN======================================-->
  <Animation name="GUN_CLICK" guid="a9755737-b144-4166-9c2b-ea37eb4c2ab5" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
      <Name>GUN_CLICK</Name>
      <AnimLength>50</AnimLength>
      <MouseRect>
        <Cursor>Hand</Cursor>
        <TooltipText>SHOOT</TooltipText>
        <MouseFlags>LeftRelease+LeftSingle+WheelDown+WheelUp</MouseFlags>
        <CallbackCode>
          (M:Event) 'LeftSingle' scmp 0 == if{ 1 (&gt;L:EFFECT_GUN,bool,bool) }
          (M:Event) 'LeftRelease' scmp 0 == if{ 0 (&gt;L:EFFECT_GUN,bool,bool) }
          (M:Event) 'WheelDown' scmp 0 ==
          if{ (L:GunUPDOWN, enum) --  0 max (>L:GunUPDOWN, enum) }
          (M:Event) 'WheelUp' scmp 0 ==
          if{ (L:GunUPDOWN, enum) ++  10 min (>L:GunUPDOWN, enum) }
        </CallbackCode>
      </MouseRect>
      <Visibility>
        <Parameter>
          <Code>
            (L:MODEL_TYPE, enum) 0 == if{ 0 }
            (L:MODEL_TYPE, enum) 1 == if{ 1 }
            (L:MODEL_TYPE, enum) 2 == if{ 0 }
          </Code>
          <Lag>10</Lag>
        </Parameter>
      </Visibility>
      <Animation>
      <Parameter>
        <Code>
            (L:EFFECT_GUN,bool) 100 *
        </Code>
    </Parameter>
  </Animation>
  </PartInfo>



  <Animation name="GUN_MOVE" guid="da17f7a2-96dd-4e69-bc74-5ca678d3bdf7" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
      <Name>GUN_MOVE</Name>
      <AnimLength>100</AnimLength>
      <Animation>
          <Parameter>
               <Code>
                (L:MINIGUN, bool) 1 == if{ 
                (E:ABSOLUTE TIME, second) 0.1 % 100 *
                } els{ 0 }
               </Code>
      </Parameter>
      </Animation>
  </PartInfo>
  <Animation name="DOOR4" guid="24860126-548e-40fe-bdca-68a2a9b80349" length="1" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>DOOR4</Name>
    <AnimLength>1</AnimLength>
    <Visibility>
    <Parameter>
      <Code>
      (L:PART4,bool)
      if{ 1 } els{ 0 }
      </Code>
    </Parameter>
    </Visibility>
  </PartInfo>
  <Animation name="GunUPDOWN" guid="ca79dd08-45a6-43e7-9406-fa7c7601dc2b" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
      <Name>GunUPDOWN</Name>
      <AnimLength>100</AnimLength>
      <Animation>
        <Parameter>
          <Code>
              (L:GunUPDOWN,enum) 10 *
          </Code>
          <Lag>50</Lag>
      </Parameter>
      </Animation>
    </PartInfo>

  <Animation name="MG_MOUNT_R" guid="68865927-ef7d-439d-b7fe-99f0b4c82b8b" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
      <Name>MG_MOUNT_R</Name>
      <AnimLength>100</AnimLength>
      <Animation>
        <Parameter>
          <Code>
              (L:GUN1ANGLE,enum) 10 *
          </Code>
          <Lag>50</Lag>
      </Parameter>
      </Animation>
      <MouseRect>
        <Cursor>Hand</Cursor>
        <MouseFlags>Wheel</MouseFlags>
        <TooltipText>SWIVEL GUN</TooltipText>
        <CallbackCode>
          (M:Event) 'WheelDown' scmp 0 ==
          if{ (L:GUN1ANGLE, enum) --  0 max (>L:GUN1ANGLE, enum) }
          (M:Event) 'WheelUp' scmp 0 ==
          if{ (L:GUN1ANGLE, enum) ++  10 min (>L:GUN1ANGLE, enum) }
       </CallbackCode>
          </MouseRect>   
  </PartInfo>
  <Animation name="MG_MOUNT_L" guid="28316fba-422d-4f71-87f4-30fe65081094" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
      <Name>MG_MOUNT_L</Name>
      <AnimLength>100</AnimLength>
      <Animation>
        <Parameter>
          <Code>
              (L:GUN2ANGLE,enum) 10 *
          </Code>
          <Lag>50</Lag>
      </Parameter>
      </Animation>
      <MouseRect>
        <Cursor>Hand</Cursor>
        <MouseFlags>Wheel</MouseFlags>
        <TooltipText>SWIVEL GUN</TooltipText>
        <CallbackCode>
          (M:Event) 'WheelDown' scmp 0 ==
          if{ (L:GUN2ANGLE, enum) --  0 max (>L:GUN2ANGLE, enum) }
          (M:Event) 'WheelUp' scmp 0 ==
          if{ (L:GUN2ANGLE, enum) ++  10 min (>L:GUN2ANGLE, enum) }
       </CallbackCode>
          </MouseRect>
  </PartInfo>


  <Animation name="SRCH LT" guid="0b883d53-d03d-48db-bfd2-2a3fec9d74b5" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
      <Name>SRCH LT</Name>
      <AnimLength>100</AnimLength>
      <Animation>
          <Parameter>
               <Code>
             (L:Winch_EXT, bool) 100 *
               </Code>
             
      </Parameter>
      </Animation>
      <MouseRect>
          <Cursor>Hand</Cursor>
          <TooltipText>TOGGLE HOIST</TooltipText>
           <CallbackCode>
     (L:Winch_EXT, bool) ! (>L:Winch_EXT, bool)
           </CallbackCode>
      </MouseRect>
  </PartInfo>


<Animation name="doorfront" guid="3e16dd94-4e75-4b77-b365-2ced234b3886" length="1" type="Sim" typeParam="AutoPlay" />
<PartInfo>
  <Name>doorfront</Name>
  <AnimLength>1</AnimLength>
  <Visibility>
  <Parameter>
    <Code>
    (L:PART1,bool)
    if{ 0 } els{ 1 }
    </Code>
  </Parameter>
  </Visibility>
</PartInfo>


    <Animation name="FR_CLICK" guid="666a523b-5c61-4aed-ba6a-e743cc6bd841" type="Sim" typeparam="AutoPlay" />
    <PartInfo>
        <Name>FR_CLICK</Name>
        <AnimLength>100</AnimLength>
        <Animation>
            <Parameter>
                <Code>(L:FR_ANIM, bool) 100 *</Code>
                <Lag>40</Lag>
        </Parameter>
        </Animation>
        <MouseRect>
          <Cursor>Hand</Cursor>
          <TooltipText>DOOR</TooltipText>
           <CallbackCode>
     (L:FR_ANIM, bool) ! (>L:FR_ANIM, bool)
           </CallbackCode>
      </MouseRect>
    </PartInfo>
    <Animation name="FR_ANIM" guid="cf44437d-66b6-4578-9a65-f226b740a895" type="Sim" typeparam="AutoPlay" />
    <PartInfo>
        <Name>FR_ANIM</Name>
        <AnimLength>100</AnimLength>
        <Animation>
            <Parameter>
                <Code>(L:FR_ANIM, bool) 100 *</Code>
                <Lag>40</Lag>
        </Parameter>
        </Animation>
        <Visibility>
          <Parameter>
            <Code>
              (L:PART1,bool) 1 != 
            </Code>
          </Parameter>
        </Visibility>
    </PartInfo>
    <Animation name="FL_CLICK" guid="68280063-f065-46df-8f53-ffaaa601e45b" type="Sim" typeparam="AutoPlay" />
    <PartInfo>
        <Name>FL_CLICK</Name>
        <AnimLength>100</AnimLength>
        <Animation>
            <Parameter>
                <Code>(L:FL_ANIM, bool) 100 *</Code>
                <Lag>40</Lag>
        </Parameter>
        </Animation>
        <MouseRect>
          <Cursor>Hand</Cursor>
          <TooltipText>DOOR</TooltipText>
           <CallbackCode>
     (L:FL_ANIM, bool) ! (>L:FL_ANIM, bool)
           </CallbackCode>
      </MouseRect>
    </PartInfo>

    <Animation name="FL_ANIM" guid="57736207-f830-4b75-be33-1b541a7274a3" type="Sim" typeparam="AutoPlay" />
    <PartInfo>
        <Name>FL_ANIM</Name>
        <AnimLength>100</AnimLength>
        <Animation>
            <Parameter>
                <Code>(L:FL_ANIM, bool) 100 *</Code>
                <Lag>40</Lag>
        </Parameter>
        </Animation>
        <Visibility>
          <Parameter>
            <Code>
              (L:PART1,bool) 1 != 
            </Code>
          </Parameter>
        </Visibility>
    </PartInfo>



<Animation name="Part1" guid="600b7c6f-9eff-4869-beb8-4db14e89a407" type="Sim" typeParam="AutoPlay" />
<PartInfo>
    <Name>Part1</Name>
    <AnimLength>100</AnimLength>
    <Animation>
        <Parameter>
              <Code>(L:PART1, bool) 100 *</Code>
            
    </Parameter>
    </Animation>
    <MouseRect>
        <Cursor>Hand</Cursor>
        <TooltipText>TOGGLE PILOT DOORS</TooltipText>
          <CallbackCode>
    (L:PART1, bool) ! (>L:PART1, bool)
          </CallbackCode>
    </MouseRect>
</PartInfo>
<Animation name="CP_Handrest" guid="eb6e049b-2837-44a5-8219-34c7fd9dddaf" type="Sim" typeParam="AutoPlay" />
<PartInfo>
    <Name>CP_Handrest</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code> 
          (A:ATTITUDE INDICATOR PITCH DEGREES,degrees) abs 17 &gt; 
          (A:ATTITUDE INDICATOR BANK DEGREES,degrees) abs (L:H60_Copilot_SafeBank, enum) &gt; or
          if{ 100 } els{ 0 }
        </Code>
        <Lag>70</Lag>
      </Parameter>
    </Animation>
</PartInfo>

<Animation name="HeadTilt_UpDown" guid="100862ac-4113-4e6b-9b7a-dbc13eb4fbf4" type="Sim" typeParam="AutoPlay" />
<PartInfo>
    <Name>HeadTilt_UpDown</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (A:ATTITUDE INDICATOR PITCH DEGREES,degrees) -1 * 50 +
        </Code>
        <Lag>60</Lag>
      </Parameter>
    </Animation>
</PartInfo>
<Animation name="HeadTilt_LR" guid="e6a2da8a-1f24-4946-a043-0dc288539306" type="Sim" typeParam="AutoPlay" />
<PartInfo>
    <Name>HeadTilt_LR</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (A:ATTITUDE INDICATOR BANK DEGREES,degrees) 50 +
        </Code>
        <Lag>60</Lag>
      </Parameter>
    </Animation>
</PartInfo>

<Animation name="Part2" guid="02d87ba9-3058-48c3-8e09-59415270a103" type="Sim" typeParam="AutoPlay" />
<PartInfo>
    <Name>Part2</Name>
    <AnimLength>100</AnimLength>
    <Animation>
        <Parameter>
              <Code>(L:PART2, bool) 100 *</Code>
        
    </Parameter>
    </Animation>
    <MouseRect>
        <Cursor>Hand</Cursor>
        <TooltipText>TOGGLE GUNNER DOORS</TooltipText>
          <CallbackCode>
    (L:PART2, bool) ! (>L:PART2, bool)
          </CallbackCode>
    </MouseRect>
</PartInfo>

<Animation name="Part3" guid="7e5b85be-4761-4d27-a980-9017741f8e55" type="Sim" typeParam="AutoPlay" />
<PartInfo>
    <Name>Part3</Name>
    <AnimLength>100</AnimLength>
    <Animation>
        <Parameter>
              <Code>(L:DOORS_OPEN_REAR, bool) 100 *</Code>
    </Parameter>
    </Animation>
    <MouseRect>
        <Cursor>Hand</Cursor>
        <TooltipText>TOGGLE REAR DOORS</TooltipText>
          <CallbackCode>
    (L:DOORS_OPEN_REAR, bool) ! (>L:DOORS_OPEN_REAR, bool)
          </CallbackCode>
    </MouseRect>
</PartInfo>

<Animation name="FLARE_TOGGLE" guid="3b308098-bbb1-4f24-b694-787549039f04" type="Sim" typeParam="AutoPlay" />
<PartInfo>
    <Name>FLARE_TOGGLE</Name>
    <AnimLength>100</AnimLength>
    <Animation>
        <Parameter>
              <Code>(L:EFFECT_FLARE, bool) 100 *</Code>
    </Parameter>
    </Animation>
    <MouseRect>
        <Cursor>Hand</Cursor>
        <TooltipText>DISPENSE FLARE</TooltipText>
          <CallbackCode>
    (L:EFFECT_FLARE, bool) ! (>L:EFFECT_FLARE, bool)
          </CallbackCode>
    </MouseRect>
</PartInfo>



<Animation name="Part5" guid="2c049302-eac9-4f5b-b6e7-eeab4f403bcf" type="Sim" typeParam="AutoPlay" />
<PartInfo>
  <Name>Part5</Name>
  <AnimLength>100</AnimLength>
  <Animation>
      <Parameter>
          <Code>
              (L:PART5,enum) 33 *
          </Code>
          <Lag>100</Lag>
      </Parameter>
  </Animation>
  <MouseRect>
<Cursor>Hand</Cursor>
<TooltipText>SLING CARGO(WHEEL)</TooltipText>
<MouseFlags>Wheel</MouseFlags>
         <CallbackCode>
            (M:Event) 'WheelDown' scmp 0 ==
            if{ (L:PART5, enum) --  0 max (>L:PART5, enum) }
            (M:Event) 'WheelUp' scmp 0 ==
            if{ (L:PART5, enum) ++  3 min (>L:PART5, enum) }
         </CallbackCode>
  </MouseRect>
</PartInfo>

<Animation name="Part4" guid="5c0d3122-7f67-413e-b6ca-b8895624ee7d" type="Sim" typeParam="AutoPlay" />
<PartInfo>
    <Name>Part4</Name>
    <AnimLength>100</AnimLength>
    <Animation>
        <Parameter>
              <Code>(L:EFFECT_WATER, bool) 100 *</Code>
    </Parameter>
    </Animation>
    <MouseRect>
        <Cursor>Hand</Cursor>
        <TooltipText>TOGGLE WATER DROP</TooltipText>
          <CallbackCode>
    (L:EFFECT_WATER, bool) ! (>L:EFFECT_WATER, bool)
          </CallbackCode>
    </MouseRect>
</PartInfo>
    <Animation name="ADDITIONSVIS" guid="4e710b62-820e-4e9b-9683-fc47c70386f5" length="100" type="Sim" typeParam2="ADDITIONSVIS" typeParam="AutoPlay" />
    <PartInfo>
      <Name>ADDITIONSVIS</Name>
      <AnimLength>100</AnimLength>
      <Animation>
          <Parameter>
              <Code>
                  (L:ADDITIONSVIS,enum) 33 *
              </Code>
          </Parameter>
      </Animation>
      <MouseRect>
    <Cursor>Hand</Cursor>
    <TooltipText>EXT PARTS(WHEEL)</TooltipText>
    <MouseFlags>Wheel</MouseFlags>
       <CallbackCode>
          (M:Event) 'WheelDown' scmp 0 ==
          if{ (L:ADDITIONSVIS, enum) --  0 max (>L:ADDITIONSVIS, enum) }
          (M:Event) 'WheelUp' scmp 0 ==
          if{ (L:ADDITIONSVIS, enum) ++  3 min (>L:ADDITIONSVIS, enum) }
       </CallbackCode>
      </MouseRect>
    </PartInfo>


<Animation name="lever_stick_l_r" guid="8F28026E-B903-4856-AFAE-40B71893D3F2" type="Sim" typeparam="AutoPlay" />
<Animation name="lever_stick_fore_aft" guid="78C6AB3C-F440-443d-93C9-942BA892610E" type="Sim" typeparam="AutoPlay" />
  <PartInfo>
    <Name>lever_stick_l_r</Name>
    <AnimLength>100</AnimLength>
    <Animation>
        <Parameter>
            <Sim>
                <Variable>YOKE X POSITION</Variable>
                <Units>percent</Units>
                <Scale>0.5</Scale>
                <Bias>50</Bias>
            </Sim>
        </Parameter>
    </Animation>
</PartInfo>
<PartInfo>
    <Name>lever_stick_fore_aft</Name>
    <AnimLength>100</AnimLength>
    <Animation>
        <Parameter>
            <Sim>
                <Variable>YOKE Y POSITION</Variable>
                <Units>percent</Units>
                <Scale>0.5</Scale>
                <Bias>50</Bias>
            </Sim>
        </Parameter>
    </Animation>
</PartInfo>

<Animation name="HUD_ON" guid="045c9674-2afc-40b0-b267-02662f27080c" type="Sim" typeParam="AutoPlay" />
<PartInfo>
  <Name>HUD_ON</Name>
  <AnimLength>100</AnimLength>
  <Animation>
    <Parameter>
      <Code>(L:HUDPWR, bool) 100 *</Code>
    </Parameter>
  </Animation>
  <MouseRect>
    <Cursor>Hand</Cursor>
    <TooltipText>HUD POWER</TooltipText>
    <MouseFlags>LeftSingle</MouseFlags>
    <CallbackCode>
      (L:HUDPWR,bool) ! (&gt;L:HUDPWR,bool)
    </CallbackCode>
  </MouseRect>
</PartInfo>


</ModelInfo>