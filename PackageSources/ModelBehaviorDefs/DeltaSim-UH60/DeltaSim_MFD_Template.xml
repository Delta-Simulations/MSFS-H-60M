<ModelBehaviors>
    <!-- CREATED FOR DELTA SIMULATION AIRCRAFT###################################### -->
    <Include ModelBehaviorFile="Asobo\Common.xml"/> 
    <Include ModelBehaviorFile="Asobo\Airliner\AirlinerCommon.xml"/>
    <Include ModelBehaviorFile="Asobo\Airliner\Boeing.xml"/>
    <Include ModelBehaviorFile="Asobo\Airliner\FMC.xml"/>
    <Include ModelBehaviorFile="Asobo\Airliner\GlassCockpit.xml"/>
    <Include ModelBehaviorFile="Asobo\Airliner\Airbus.xml"/>
    <Include Path="DeltaSim_Switch_Template.xml"/>
    <Include Path="DeltaSim_Lighting_Template.xml"/>

<Template Name="DELTASIM_MFD_Button_Template">
    <DefaultTemplateParameters>
        <TOOLTIPID>MFD BTN</TOOLTIPID>
    </DefaultTemplateParameters>
    <UseTemplate Name="DELTASIM_PushButton_Template">
        <TOOLTIPID>#TOOLTIPID#</TOOLTIPID>
    </UseTemplate>
</Template>
<Template Name="DELTASIM_MFD_Switch_Template">
    <DefaultTemplateParameters>
        <TOOLTIPID>MFD PWR</TOOLTIPID>
    </DefaultTemplateParameters>

  <UseTemplate Name="GENERIC_Toggle_Switch_Template">
    <ANIM>(O:BTN, bool) 100 *</ANIM>
    <TOOLTIPID>#TOOLTIPID#</TOOLTIPID>
    <INTERACT_CODE>
      (O:BTN, bool) ! (&gt;O:BTN, bool)
      #LEFT_SINGLE_CODE#
    </INTERACT_CODE>

  </UseTemplate>
</Template>

<Template Name="DELTASIM_FDDCP_Template">
    <DefaultTemplateParameters>
        <ID>1</ID>
    </DefaultTemplateParameters>
      <Component ID="KNOB_AFCS_REF_SELECT_#ID#" Node="KNOB_AFCS_REF_SELECT_#ID#">
        <UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
          <NODE_ID>KNOB_AFCS_REF_SELECT_#ID#</NODE_ID>
          <PART_ID>KNOB_AFCS_REF_SELECT_#ID#</PART_ID>
          <ANIM_NAME_KNOB>KNOB_AFCS_REF_SELECT_#ID#</ANIM_NAME_KNOB>
      <CLOCKWISE_CODE_DEFAULT_IM>
        (L:H60_AFCS_REF_SELECT_MODE, enum) ++ 3 min (&gt;L:H60_AFCS_REF_SELECT_MODE)
      </CLOCKWISE_CODE_DEFAULT_IM>
      <ANTICLOCKWISE_CODE_DEFAULT_IM>
        (L:H60_AFCS_REF_SELECT_MODE, enum) -- 0 max (&gt;L:H60_AFCS_REF_SELECT_MODE)
      </ANTICLOCKWISE_CODE_DEFAULT_IM>
      <CLOCKWISE_CODE_DRAG_IM>
        (L:H60_AFCS_REF_SELECT_MODE, enum) ++ 3 min (&gt;L:H60_AFCS_REF_SELECT_MODE)
      </CLOCKWISE_CODE_DRAG_IM>
      <ANTICLOCKWISE_CODE_DRAG_IM>
        (L:H60_AFCS_REF_SELECT_MODE, enum) -- 0 max (&gt;L:H60_AFCS_REF_SELECT_MODE)
      </ANTICLOCKWISE_CODE_DRAG_IM>
      <LEFT_SINGLE_CODE>
        (L:H60_AFCS_REF_SELECT_MODE, enum) 0 == if{ 1 (&gt;K:BAROMETRIC) }

        (L:H60_AFCS_REF_SELECT_MODE, enum) 1 == if{ 200 (&gt;L:H60_CAS_RADALT_HI) }
        (L:H60_AFCS_REF_SELECT_MODE, enum) 2 == if{ 50 (&gt;L:H60_CAS_RADALT_LO) }

    </LEFT_SINGLE_CODE>
      <ANIMTIP_0>REF ADJUST LEFT</ANIMTIP_0>
      <ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
      <ANIMTIP_1>REF ADJUST RIGHT</ANIMTIP_1>
      <ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
      <ANIMTIP_3>REF ADJUST PUSH</ANIMTIP_3>
      <ANIMTIP_3_ON_CURSOR>Hand</ANIMTIP_3_ON_CURSOR>
      <THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
          <THRESHOLD_X_MOUSE>0.015</THRESHOLD_X_MOUSE>
        </UseTemplate>
      </Component>

    <Component ID="KNOB_AFCS_REF_ADJUST_#ID#" Node="KNOB_AFCS_REF_ADJUST_#ID#">
        <UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
            <WWISE_EVENT>Cpit_Knob_Move_1</WWISE_EVENT>
            <WWISE_EVENT_1>Cpit_Knob_Move_1</WWISE_EVENT_1>
            <NODE_ID>KNOB_AFCS_REF_ADJUST_#ID#</NODE_ID>
            <PART_ID>KNOB_AFCS_REF_ADJUST_#ID#</PART_ID>
            <ANIM_NAME_KNOB>KNOB_AFCS_REF_ADJUST_#ID#</ANIM_NAME_KNOB>
            <CLOCKWISE_CODE_DEFAULT_IM>
                (L:H60_AFCS_REF_SELECT_MODE, enum) 0 == if{ 1 (&gt;K:KOHLSMAN_INC) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 1 == (L:H60_CAS_RADALT_HI) -1 &gt; and if{
                (L:H60_CAS_RADALT_HI) 10 + 1000 min (&gt;L:H60_CAS_RADALT_HI) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 2 == (L:H60_CAS_RADALT_LO) -1 &gt; and if{
                (L:H60_CAS_RADALT_LO) 10 + 990 min (&gt;L:H60_CAS_RADALT_LO) }

            </CLOCKWISE_CODE_DEFAULT_IM>
            <ANTICLOCKWISE_CODE_DEFAULT_IM>
                (L:H60_AFCS_REF_SELECT_MODE, enum) 0 == if{ 1 (&gt;K:KOHLSMAN_DEC) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 1 == if{ (L:H60_CAS_RADALT_HI) 10 - 0 max
                (&gt;L:H60_CAS_RADALT_HI) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 2 == if{ (L:H60_CAS_RADALT_LO) 10 - 0 max
                (&gt;L:H60_CAS_RADALT_LO) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 1 == (L:H60_CAS_RADALT_HI) 0 == and if{ -1
                (&gt;L:H60_CAS_RADALT_HI) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 2 == (L:H60_CAS_RADALT_LO) 0 == and if{ -1
                (&gt;L:H60_CAS_RADALT_LO) }
            </ANTICLOCKWISE_CODE_DEFAULT_IM>
            <CLOCKWISE_CODE_DRAG_IM>
                (L:H60_AFCS_REF_SELECT_MODE, enum) 0 == if{ 1 (&gt;K:KOHLSMAN_INC) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 1 == if{ (L:H60_CAS_RADALT_HI) 10 + 1000 min
                (&gt;L:H60_CAS_RADALT_HI) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 2 == if{ (L:H60_CAS_RADALT_LO) 10 + 990 min
                (&gt;L:H60_CAS_RADALT_LO) }
            </CLOCKWISE_CODE_DRAG_IM>
            <ANTICLOCKWISE_CODE_DRAG_IM>
                (L:H60_AFCS_REF_SELECT_MODE, enum) 0 == if{ 1 (&gt;K:KOHLSMAN_DEC) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 1 == if{ (L:H60_CAS_RADALT_HI) 10 - 0 max
                (&gt;L:H60_CAS_RADALT_HI) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 2 == if{ (L:H60_CAS_RADALT_LO) 10 - 0 max
                (&gt;L:H60_CAS_RADALT_LO) }

                (L:H60_AFCS_REF_SELECT_MODE, enum) 1 == (L:H60_CAS_RADALT_HI) 0 == and if{ -1
                (&gt;L:H60_CAS_RADALT_HI) }
                (L:H60_AFCS_REF_SELECT_MODE, enum) 2 == (L:H60_CAS_RADALT_LO) 0 == and if{ -1
                (&gt;L:H60_CAS_RADALT_LO) }
            </ANTICLOCKWISE_CODE_DRAG_IM>
            <ANIMTIP_0>REF ADJUST LEFT</ANIMTIP_0>
            <ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
            <ANIMTIP_1>REF ADJUST RIGHT</ANIMTIP_1>
            <ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
            <ANIMTIP_3>REF ADJUST PUSH</ANIMTIP_3>
            <ANIMTIP_3_ON_CURSOR>Hand</ANIMTIP_3_ON_CURSOR>
            <THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
            <THRESHOLD_X_MOUSE>0.015</THRESHOLD_X_MOUSE>
        </UseTemplate>
    </Component>

    <Component ID="KNOB_AFCS_ALT_SEL_#ID#" Node="KNOB_AFCS_ALT_SEL_#ID#">
        <UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
            <WWISE_EVENT>Cpit_Knob_Move_1</WWISE_EVENT>
            <NODE_ID>KNOB_AFCS_ALT_SEL_#ID#</NODE_ID>
            <PART_ID>KNOB_AFCS_ALT_SEL_#ID#</PART_ID>
            <ANIM_NAME_KNOB>KNOB_AFCS_ALT_SEL_#ID#</ANIM_NAME_KNOB>
            <CLOCKWISE_CODE_DEFAULT_IM>
                (&gt;K:AP_ALT_VAR_INC)
            </CLOCKWISE_CODE_DEFAULT_IM>
            <ANTICLOCKWISE_CODE_DEFAULT_IM>
                (&gt;K:AP_ALT_VAR_DEC)
            </ANTICLOCKWISE_CODE_DEFAULT_IM>
            <CLOCKWISE_CODE_DRAG_IM>
                (&gt;K:AP_ALT_VAR_INC)
            </CLOCKWISE_CODE_DRAG_IM>
            <ANTICLOCKWISE_CODE_DRAG_IM>
                (&gt;K:AP_ALT_VAR_DEC)
            </ANTICLOCKWISE_CODE_DRAG_IM>
            <LEFT_SINGLE_CODE>(A:INDICATED ALTITUDE, feet) (&gt;K:AP_ALT_VAR_SET_ENGLISH)</LEFT_SINGLE_CODE>
            <ANIMTIP_0>DEC ALTITUDE</ANIMTIP_0>
            <ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
            <ANIMTIP_1>INC ALTITUDE</ANIMTIP_1>
            <ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
            <ANIMTIP_3>SET CURRENT</ANIMTIP_3>
            <ANIMTIP_3_ON_CURSOR>Hand</ANIMTIP_3_ON_CURSOR>
            <THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
            <THRESHOLD_X_MOUSE>0.015</THRESHOLD_X_MOUSE>
        </UseTemplate>
    </Component>

    <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_NAV_MODE_#ID#</NODE_ID>
        <TOOLTIPID>ROLL NAV MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_GS_#ID#</NODE_ID>
        <TOOLTIPID>VERTICAL NAV MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_RADALT_#ID#</NODE_ID>
        <TOOLTIPID>RADALT MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_ALTP_#ID#</NODE_ID>
        <TOOLTIPID>PRESELECT ALT MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_ALT_#ID#</NODE_ID>
        <TOOLTIPID>ALT MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_IAS_#ID#</NODE_ID>
        <TOOLTIPID>SPD MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_HDG_#ID#</NODE_ID>
        <TOOLTIPID>HDG MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_VS_#ID#</NODE_ID>
        <TOOLTIPID>VS MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_COUPLE_#ID#</NODE_ID>
        <TOOLTIPID>COUPLE AUTOPILOT</TOOLTIPID>
        <LEFT_SINGLE_CODE>
            (L:H60_AFCS_CPLD, bool) ! (&gt;L:H60_AFCS_CPLD, bool)
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="Korry_Emmis_DELTASIM">
        <NODE_ID>KORRY_AFCS_ENGAGED_COUPLE_#ID#</NODE_ID>
        <TRUECODE>
          (L:H60_AFCS_CPLD, bool)
        </TRUECODE>
      </UseTemplate>

      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_GO_AROUND_#ID#</NODE_ID>
        <TOOLTIPID>GO AROUND MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_DECL_#ID#</NODE_ID>
        <TOOLTIPID>DECL MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_HVR_#ID#</NODE_ID>
        <TOOLTIPID>HOVER MODE</TOOLTIPID>
        <LEFT_SINGLE_CODE>
            (L:H60_AFCS_HVR, bool) ! (&gt;L:H60_AFCS_HVR, bool)
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="Korry_Emmis_DELTASIM">
        <NODE_ID>KORRY_AFCS_ENGAGED_HVR_#ID#</NODE_ID>
        <TRUECODE>
          (L:H60_AFCS_HVR, bool)
        </TRUECODE>
      </UseTemplate>
      <UseTemplate Name="DELTASIM_PushButton_Template">
        <NODE_ID>Button_FD_#ID#</NODE_ID>
        <TOOLTIPID>FLIGHT DIRECTOR</TOOLTIPID>
        <LEFT_SINGLE_CODE>
            (K:TOGGLE_FLIGHT_DIRECTOR) ! (&gt;K:TOGGLE_FLIGHT_DIRECTOR)
        </LEFT_SINGLE_CODE>
      </UseTemplate>
      <UseTemplate Name="Korry_Emmis_DELTASIM">
        <NODE_ID>KORRY_AFCS_ENGAGED_FD_#ID#</NODE_ID>
        <TRUECODE>
          (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, bool)
        </TRUECODE>
      </UseTemplate>
</Template>


<Template Name="DELTASIM_MFD_Template">
    <DefaultTemplateParameters>
        <ID>1</ID>
    </DefaultTemplateParameters>

  <UseTemplate Name="GENERIC_Toggle_Switch_Template">
    <ANIM>(L:H60_MFD_#ID#_PWR_BTN, bool) 100 *</ANIM>
    <NODE_ID>Button_MFD_#ID#_PWR</NODE_ID>
    <TOOLTIPID>MFD #ID# PWR</TOOLTIPID>
    <INTERACT_CODE>
      (L:H60_MFD_#ID#_PWR_BTN, bool) ! (&gt;L:H60_MFD_#ID#_PWR_BTN, bool)
    </INTERACT_CODE>
    <WWISE_EVENT_1>Cpit_PlasticButton_Out</WWISE_EVENT_1>
    <WWISE_EVENT_2>Cpit_PlasticButton_Out</WWISE_EVENT_2>
  </UseTemplate>


    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_B_1</NODE_ID>
        <LEFT_SINGLE_CODE>
        0 (&gt;L:H60_MFD_#ID#_MODE, bool)
        </LEFT_SINGLE_CODE>
    </UseTemplate>
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_B_2</NODE_ID>
        <LEFT_SINGLE_CODE>
        1 (&gt;L:H60_MFD_#ID#_MODE, bool)
        </LEFT_SINGLE_CODE>
    </UseTemplate>
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_B_3</NODE_ID>
        <LEFT_SINGLE_CODE>
        2 (&gt;L:H60_MFD_#ID#_MODE, bool)
        </LEFT_SINGLE_CODE>
    </UseTemplate>
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_B_4</NODE_ID>
        <LEFT_SINGLE_CODE>
        3 (&gt;L:H60_MFD_#ID#_MODE, bool)
        </LEFT_SINGLE_CODE>
    </UseTemplate>
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_B_5</NODE_ID>
        <LEFT_SINGLE_CODE>
        4 (&gt;L:H60_MFD_#ID#_MODE, bool)
        </LEFT_SINGLE_CODE>
    </UseTemplate>
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_B_6</NODE_ID>
        <LEFT_SINGLE_CODE>
        5 (&gt;L:H60_MFD_#ID#_MODE, bool)
        </LEFT_SINGLE_CODE>
    </UseTemplate>

    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_L_1</NODE_ID>
        <LEFT_SINGLE_CODE>
            (L:H60_MFD_#ID#_MODE, bool) 4 == 
            (L:H60_TAC_MAP_LEGEND_VIS, bool) 0 == and
            if{
                (L:H60_TAC_MAP_ORIENT, bool) ! (&gt;L:H60_TAC_MAP_ORIENT, bool)
            }

        </LEFT_SINGLE_CODE>
    </UseTemplate>
        <!-- Zoom - Tac Map -->
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_L_4</NODE_ID>
        <LEFT_SINGLE_CODE>
            (L:H60_MFD_#ID#_MODE, bool) 4 == 
            (L:H60_TAC_MAP_LEGEND_VIS, bool) 0 == and
            if{
                (L:H60_TAC_MAP_SCALE, bool) ++ 17 min (&gt;L:H60_TAC_MAP_SCALE, bool)
            }
            

        </LEFT_SINGLE_CODE>
    </UseTemplate>
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_L_5</NODE_ID>
        <LEFT_SINGLE_CODE>
            (L:H60_MFD_#ID#_MODE, bool) 4 == 
            (L:H60_TAC_MAP_LEGEND_VIS, bool) 0 == and
            if{
                (L:H60_TAC_MAP_SCALE, bool) --  4 max (&gt;L:H60_TAC_MAP_SCALE, bool)
            }
            (L:H60_MFD_#ID#_MODE, bool) 2 == 
            if{
                (L:H60_EICAS_Page_Advis) 1 + (&gt;L:H60_EICAS_Page_Advis)
            }

        </LEFT_SINGLE_CODE>
    </UseTemplate>
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_L_6</NODE_ID>
        <LEFT_SINGLE_CODE>
            (L:H60_MFD_#ID#_MODE, bool) 4 == 
            (L:H60_TAC_MAP_LEGEND_VIS, bool) 0 == and
            if{
                (L:H60_TAC_MAP_NORTH_ARROW, bool) ! (&gt;L:H60_TAC_MAP_NORTH_ARROW, bool)
            }

            (L:H60_MFD_#ID#_MODE, bool) 2 == 
            if{
                (L:H60_EICAS_Page_Advis) 1 - 0 max (&gt;L:H60_EICAS_Page_Advis)
            }
        </LEFT_SINGLE_CODE>
    </UseTemplate>


        <!-- Center/Decenter - Tac Map -->
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_U_4</NODE_ID>
        <LEFT_SINGLE_CODE>
            (L:H60_MFD_#ID#_MODE, bool) 4 == 
            (L:H60_TAC_MAP_LEGEND_VIS, bool) 0 == and
            if{
                (L:H60_TAC_MAP_CTR, bool) ! (&gt;L:H60_TAC_MAP_CTR, bool)
            }
        </LEFT_SINGLE_CODE>
    </UseTemplate>


        <!-- Right Side - Show/Hide Legend - Tac Map -->




    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_R_1</NODE_ID>
        <LEFT_SINGLE_CODE>
            (L:H60_MFD_#ID#_MODE, bool) 4 == 
            (L:H60_TAC_MAP_LEGEND_VIS, bool) 0 == and
            if{

            }
        </LEFT_SINGLE_CODE>
    </UseTemplate>
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_R_2</NODE_ID>
        <LEFT_SINGLE_CODE>
            (L:H60_MFD_#ID#_MODE, bool) 4 == 
            (L:H60_TAC_MAP_LEGEND_VIS, bool) 0 == and
            if{
                (L:H60_TAC_MAP_SCALE_MODE, bool) ! (&gt;L:H60_TAC_MAP_SCALE_MODE, bool)
            }
        </LEFT_SINGLE_CODE>
    </UseTemplate>

    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_R_5</NODE_ID>
        <LEFT_SINGLE_CODE>
            (L:H60_MFD_#ID#_MODE, bool) 4 == 
            (L:H60_TAC_MAP_LEGEND_VIS, bool) 0 == and
            if{
                (L:H60_TAC_MAP_MODE) 1 + (&gt;L:H60_TAC_MAP_MODE)
                (L:H60_TAC_MAP_MODE) 4 &gt; if{ 1 (&gt;L:H60_TAC_MAP_MODE) }
            }
            (L:H60_MFD_#ID#_MODE, bool) 2 == 
            if{
                (L:H60_EICAS_Page_Warning) 1 + (&gt;L:H60_EICAS_Page_Warning)
            }

        </LEFT_SINGLE_CODE>
    </UseTemplate>
    <UseTemplate Name="DELTASIM_MFD_Button_Template">
        <NODE_ID>Button_MFD_#ID#_R_6</NODE_ID>
        <LEFT_SINGLE_CODE>
            (L:H60_MFD_#ID#_MODE, bool) 4 == 
            
            if{
                (L:H60_TAC_MAP_LEGEND_VIS, bool) ! (&gt;L:H60_TAC_MAP_LEGEND_VIS, bool)
            }

            (L:H60_MFD_#ID#_MODE, bool) 2 == 
            if{
                (L:H60_EICAS_Page_Warning) 1 - 0 max (&gt;L:H60_EICAS_Page_Warning)
            }
        </LEFT_SINGLE_CODE>
    </UseTemplate>



</Template>
</ModelBehaviors>
